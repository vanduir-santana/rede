#!/bin/bash

version="1.0.6"
author="Vanduir Santana"

# ------------------------------------------------------------------------------------
#                        ..:: V A R I A V E I S  ::..
# ------------------------------------------------------------------------------------

bipt=""
bdns=""
bdhcp=""

DIRET="/root/dev/rede"
FREDE="$DIRET/etc/rede.csv"
FZONA1="$DIRET/db.c.net"
FZONA2="$DIRET/db.172.16"
FZONA1_H="$DIRET/etc/heads/db.c.net.head"
FZONA2_H="$DIRET/etc/heads/db.172.16.head"
FDHCP_H="$DIRET/etc/heads/dhcpd.conf.head"
FDHCP="dhcpd.conf"
DOMINIO="c.net"
DOMINIOB="c.net."	# dominio com . no final para inserir nos arqs de conf do bind

WAN="eth0"		# interface externa
LAN="eth1"  		# interface interna
MASK=16
IPYT="172.16.22.13"

verde='\e[32m'
amarelo='\e[93m'
magenta='\e[35m'
res='\E[0m'
TDNS="$magenta[ DNS  ]$res"
TDHCP="$amarelo[ DHCP ]$res"
TFW="$verde[ IPT  ]$res"

# Verifica se existe arquivo de conf.
if [[ ! -f $FREDE ]]
then
  echo "Nao encontrou arquivo rede.csv"
  exit 0
fi
# ------------------------------------------------------------------------------------
#                         ..::  F  U  N Ç Õ E S ::..
# ------------------------------------------------------------------------------------
# Exibe linha
# -----------------------------------------------------
function elinha() {
  echo '-------------------------------------------------------------------------------'
}

# -----------------------------------------------------
# Cabeca db.c.net
# -----------------------------------------------------
function dns_cabeca() {
  [[ -f $FZONA1 ]] && rm $FZONA1
  cat $FZONA1_H >> $FZONA1
  # cabeca db.172.16 
  [[ -f $FZONA2 ]] && rm $FZONA2
  cat $FZONA2_H >> $FZONA2
}

# -----------------------------------------------------
# Cabeca dhcp
# -----------------------------------------------------
function dhcp_cabeca() {
  [[ -f $FDHCP ]] && rm $FDHCP
  cat $FDHCP_H >> $FDHCP
}

# -----------------------------------------------------
# Cabecalho saida
# -----------------------------------------------------
function cabecalho_s() {
  # imprime cabelho na saida (tela)
  elinha
  echo -e "\e[42m                              dbIT Tecnologia                                  $res"
}

# -----------------------------------------------------
# Texto do loop
# -----------------------------------------------------
function loop_s() {
  elinha
  echo -e "LOOP ARQUIVO DE CONFIGS DE REDE..."
  elinha
}
# -----------------------------------------------------
# Faz backup antes de mover arquivo
# -----------------------------------------------------
function mv2() {
  local fmod="$1"
  local forig="$2"
  local fbkp="$forig.bkp"
  echo "Backup $forig para $fbkp"
  mv "$forig" "$fbkp"
  echo "Mover $fmod para $forig"
  mv "$fmod" "$forig"

}

# -----------------------------------------------------
# Incrementa serial arquivo de dns
# -----------------------------------------------------
function dns_inc_serial() {
  # pega numero serial do arquivo de zona
  local arq="$1"
  local linha=$(grep "; Serial" $arq) 		# procura linha com o texto "; Serial"
  local serial=$(echo -e "$linha" | xargs)	# retira espacoes
  # IFS na msma linha (evitar mudar IFS global)
  IFS=";" read serial nome <<< "$serial"	# separa campos e retorna so serial
  serial=$(echo "$serial" | xargs) 
  local prox=$((serial+1)) 			# proximo serial 

  local linhan=${linha/$serial/$prox}
  sed -i s/"$linha"/"$linhan"/g "$arq"   	# substitui linha no arquivo

  elinha
  echo -e "$TDNS Incrementar serial de $serial para $prox em $arq"
  #echo "$TDNS Linha: $(grep "; Serial" $arq)"
 }

# -----------------------------------------------------
# Insere registro nos arquivos de configuracao
# Arquivos de zonas do bind, dhcpd.conf, etc
# -----------------------------------------------------
function reg() {
  local mac=$1
  local ip=$2
  local nome=$3
  local desc=$4
  local status=$5

  if [[ $bdns ]]; then
    echo -e "$TDNS Inserir host $nome na zona local de clientes: $FZONA1"
    # nome.domino		IN	A	172.16.0.x
    echo -e "$nome.$DOMINIOB\t\tIN\tA\t$ip" >> "$FZONA1"

    echo -e "$TDNS Inserir host $nome na zona local reversa: $FZONA2"
    # evitar mecher no IFS (mas e possivel fazer com IFS e ; td na msma linha: impl. em mseriald )
    # pega dois ultimos octetos do ip
    p3=$(echo $ip | cut -d \. -f 3)
    p4=$(echo $ip | cut -d \. -f 4)
    # XX.XX	IN	PTR	nome.dominio.		; IP
    echo -e "$p4.$p3\tIN\tPTR\t$nome.$DOMINIOB\t\t; $ip" >> "$FZONA2"
  fi
  
  if [[ $bdhcp ]]; then 
    echo -e "$TDHCP Inserir host no dhcp.conf"
    echo "" >> "$FDHCP"
    echo "# $desc" >> "$FDHCP"
    echo "host $nome {" >> "$FDHCP"
    echo "  hardware ethernet $mac;" >> "$FDHCP"
    #echo "  fixed-address $ip;"  >> "$FDHCP"  
    echo "  fixed-address $nome.$DOMINIO;"  >> "$FDHCP"  
    echo "}" >> "$FDHCP"
  fi
}

# -----------------------------------------------------
# Inicializar iptables
# -----------------------------------------------------
function ipt_init() {
  elinha
  echo -e "$TFW Iniciando firewall..."
  echo -e "$TFW Limpando regras..."
  iptables -F
  iptables -X
  iptables -t nat -F
  iptables -t nat -X
  iptables -t mangle -F
  iptables -t mangle -X

  iptables -P INPUT ACCEPT
  iptables -P FORWARD ACCEPT
  iptables -P OUTPUT ACCEPT

  elinha
  echo -e "$TFW Permitir DNS lookups..."
  iptables -A OUTPUT -p udp --dport 53 -j ACCEPT
  #echo -e "$TFW Regras INPUT..."
  #iptables -A INPUT -i lo -j ACCEPT
  #iptables -A INPUT -i $LAN -s 172.16.0.0/$MASK -j ACCEPT
  #iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
}  

# -----------------------------------------------------
# Permite ou bloqueia ip para navegacao na intenet
# Quando bloquear, libera youtaberai.com basico 
# -----------------------------------------------------
function ipt_perm() {
  local mac=$1
  local ip=$2
  local nome=$3
  local desc=$4
  local status=$5
  
  if [[ "$status" == "0" ]]
  then
    echo -e "$TFW BLOQUEAR internet para << $nome >> $ip, $mac"
  elif [[ "$status" == "1" ]]
  then
    echo -e "$TFW Liberar internet para << $nome >> $ip, $mac"
    iptables -t nat -A PREROUTING -i $LAN -m mac --mac-source $mac \
             -j MARK --set-mark 0x1322
    # Evita nat (redir p youtaberai.com dos nao pagantes)
    iptables -t nat -A PREROUTING -i $LAN -p tcp -s $ip -m mac --mac-source $mac \
             --dport 80 -j ACCEPT
    # Libera FORWARD de qualquer porta (estudar possibilidade de bloquear algumas portas)
    iptables -A FORWARD -i $LAN -s $ip -m mac --mac-source $mac -j ACCEPT
  fi
}

# -----------------------------------------------------
# Mascara estacoes q tiverem com os pacotes marcados 
# pela funcao ipt_perm para que possa navegar 
# na internet
# -----------------------------------------------------
function ipt_masq() {
  elinha
  echo -e "$TFW MASQUERADE para quem tiver marcado no PREROUTING por MAC " 
  iptables -t nat -A POSTROUTING -o $WAN -m mark --mark 0x1322 -j MASQUERADE
}

# -----------------------------------------------------
# Redireciona todo o restante para o portal de videos
# youtaberai.com para usarem gratuitamente 
# Depois bloqueia todo trafego para FORWARD
# -----------------------------------------------------
function ipt_redir() {
  elinha 
  echo -e "$TFW Redirecionar a porta 80 dos nao pagantes para o portal youtaberai.com" 
  iptables -t nat -A PREROUTING -i $LAN -p tcp -s 0/0 --dport 80 -j DNAT --to $IPYT:80

  echo -e "$TFW Bloquear trafego na rede para nao pagantes..."
  iptables -A FORWARD -p tcp -i $LAN -s 0/0 -j DROP
  iptables -A FORWARD -p udp -i $LAN -s 0/0 -j DROP
}
#
# ------------------------------------------------------------------------------------
#                          ..::  M  A  I  N ::..
# ------------------------------------------------------------------------------------


# -----------------------------------------
# SELECIONA PARAMETROS
# -----------------------------------------
case "$1" in
  ipt)
    bipt=true
    ;;
  dns)
    bdns=true
    ;;
  dhcp)
    bdhcp=true
    ;;
  *)
    # executa tudo
    bipt=true
    bdns=true
    bdhcp=true
esac

# -----------------------------------------
# COMECA
# -----------------------------------------

# imprime cabecalho com o nome dbIT
cabecalho_s

# muda serial
if [[ $bdns ]]; then
  dns_inc_serial $FZONA1_H 
  dns_inc_serial $FZONA2_H
  dns_cabeca
fi

# cabeca dhcp
if [[ $bdhcp ]]; then
  dhcp_cabeca
fi

# inicializa iptables
if [[ $bipt ]]; then
  ipt_init
fi

# loop do arquivo de rede
loop_s # imprimir texto loop

# -----------------------------------------
# L O O P
IFS="|"
while read mac ip nome desc status
do
  # pula linhas vazias
  [[ $mac = "" ]] && continue
  # pula comentarios
  [[ "$mac" == "#"* ]] && continue
  
  # insere registros dhcp, dns, etc
  reg $mac $ip $nome $desc $status

  # libera ou bloqueia internet de estacao
  if [[ $bipt ]]; then
    ipt_perm $mac $ip $nome $desc $status
  fi
done < $FREDE
# F I M   L O O P
# -----------------------------------------

if [[ $bipt ]]; then
  # mascara para q estacoes q tiverem com pacotes marcados poderem navegar
  ipt_masq
  # redireciona todo o restante para yotuaberai.com
  ipt_redir
fi

cabecalho_s # mostra cabelho com o nome dbIT

# -----------------------------------------
elinha
echo "REINICIAR SERVICOS"
if [[ $bdhcp ]]; then
  elinha
  echo -e "$TDHCP Reiniciar"
  mv2 $FDHCP "/etc/dhcp/dhcpd.conf"
  service isc-dhcp-server restart
fi
if [[ $bdns ]]; then
  elinha
  echo -e "$TDNS Reiniciar"
  mv2 $FZONA1 "/etc/bind/zones/db.c.net"
  mv2 $FZONA2 "/etc/bind/zones/db.172.16"
  service bind9 restart
fi

# ------------------------------------------------------------------------------------
#                        F I M     M  A  I  N
# ------------------------------------------------------------------------------------

elinha
echo "Pronto..."
